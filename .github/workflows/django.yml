name: Django CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest 

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Notify Waiting for Deployment
      run: |
        curl -X POST \
        https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
        -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
        -d text="Deployment of e-research-server is about to start.âŒš"

    - name: Create Docker network
      run: docker network create e-research-network || true

    - name: 'Create env file'
      run: |
        touch .env
        echo 'DEBUG=True' >> .env
        echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
        echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
        echo "AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}" >> .env
        echo "SSL_CERTIFICATE=${{ secrets.SSL_CERTIFICATE }}" >> .env
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: nurhavid1/e-research-server:latest 

    # - name: Clean up unused Docker images
    #   run: docker rmi $(docker images -f "dangling=true" -q)


    - name: SSH into server and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}  
        script: |
          # Ensure the network exists
          docker network create e-research-network || true
          
          # Stop and remove any existing container
          docker stop e-research-container || true
          docker rm e-research-container || true
          
          
          # # Pull the latest image
          # docker pull nurhavid1/e-research-server:latest
          
          # Remove exited containers to avoid conflicts
          docker container prune -f
          
          # Run the new container attached to the network and expose port 8000
          docker run -d --name e-research-container --network e-research-network -p 8000:8000 nurhavid1/e-research-server:latest

    - name: Notify via Telegram on Success
      if: success()
      run: |
        curl -X POST \
        https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
        -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
        -d text="Deployment of e-research-server to ${{ secrets.SERVER_IP }} was successful.âœ…"

    - name: Notify via Telegram on Failure
      if: failure()
      run: |
        curl -X POST \
        https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
        -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
        -d text="Deployment of e-research-server to ${{ secrets.SERVER_IP }} has failed. Please check the logs.ðŸ˜’"